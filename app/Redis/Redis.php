<?phpnamespace App\Redis;/** * Created by PhpStorm. * User: yanrong * Date: 2017/7/27 * Time: 上午11:10 */use Predis\Client as RedisClient;class Redis extends RedisClient{    public function __construct($database = null, $connectSchema = null)    {        !isset($connectSchema) AND $connectSchema = config('database.redis.connect_schema');        switch($connectSchema)        {            case 'default':                $parameters = config("database.redis.default.hosts");                $options    = config("database.redis.default.options");                isset($database) AND $parameters['database'] = $database;                parent::__construct($parameters, $options);                break;            case 'sentinels':                $parameters = config("database.redis.sentinels.hosts");                $options    = config("database.redis.sentinels.options");                isset($database) AND $options['parameters']['database'] = $database;                parent::__construct($parameters, $options);                break;            default:                $parameters = config("database.redis.default.hosts");                $options    = config("database.redis.default.options");                isset($database) AND $parameters['database'] = $database;                parent::__construct($parameters, $options);        }//        parent::__construct([//            'scheme'   => 'tcp',//            'host'     => config("database.redis.{$redisName}.host"),//            'port'     => config("database.redis.{$redisName}.port"),//            'password' => config("database.redis.{$redisName}.password"),//            'database' => isset($database) ? $database : config("database.redis.{$redisName}.database"),//        ],[//            'prefix' => config('cache.prefix') . ':',//        ]);    }}