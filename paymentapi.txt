## 支付接口## 开发环境：payment-dev.doctorwork.com## 测试环境：payment-qa.doctorwork.com## 发布环境：payment.doctorwork.com## 错误码对照：- 错误码    - `0`:`success`    - `501`:`提交上来的参数错误`    - `502`:`请求方法错误`    - `503`:`服务器端运行错误`## 签名生成规则    - 1,将要提交上来的参数除开sign之后，对key进行正序排列，之后拼装成一个http_query字符串： appId=1&attach=test&desc=test&openId=ocxab04rPr0Qms9SOQA3fNgYGqoY&platForm=1&tag=test&totalFree=1&tradeType=JSAPI    - 2,字符串前后拼接加密盐，目标的加密眼恒定为“992a7f0b35d90fa9d45fe7a669414fbb”，之后每个系统的加密盐会有区别 992a7f0b35d90fa9d45fe7a669414fbbappId=1&attach=test&desc=test&openId=ocxab04rPr0Qms9SOQA3fNgYGqoY&platForm=1&tag=test&totalFree=1&tradeType=JSAPI992a7f0b35d90fa9d45fe7a669414fbb    - 3,对整个字符串做sha1加密之后就得到了签名sign## 目录- [创建订单](#create-order)- [创建退款](#refund-money)- [获取订单](#order-get)    <a name="create-order"></a>    # 创建订单    - path: `pay/create-order`    - method: `POST`    - param:        - platForm int `支付平台，1表示微信，2表示支付宝，目前只有微信支付` `必传`        - appId int `各个项目的AppId，做好配置后台之后会同意分配，目前随便写` `必传`        - openId int `用户的OpenId，微信JS支付的时候必须传递` `必传`        - desc string `订单描述，必须传递` `必传`        - totalFree int `订单金额，单位为分` `必传`        - tag string `订单商品标记` `必传`        - tradeType string `支付的SDK类型,现在只有只有JSAPI，传别的报错` `必传`        - sign string `加密教研字符串`    - response:    ```json    {        {            "code":0,            "errmsg":null,            "data":{                "orderNumber":"d136996d3d8c4c17ae0efd555a33cc5b",//第三方订单Id                "apiParams":"{\"appId\":\"wxde05c4b716e52bf2\",\"nonceStr\":\"m82k3g0zkow7c71xu9h8w31zzquzmqhm\",\"package\":\"prepay_id=wx201707191747154b472e8fb80662675352\",\"signType\":\"MD5\",\"timeStamp\":\"1500457632\",\"paySign\":\"83C5E9FB535A728F79273E58EF199130\"}",//支付参数                "editAddress":"{\"addrSign\":\"e2798b0e70c36372e768762940ef190f137f1664\",\"signType\":\"sha1\",\"scope\":\"jsapi_address\",\"appId\":\"wxde05c4b716e52bf2\",\"timeStamp\":\"1500457632\",\"nonceStr\":\"1234568\"}", //共享地址参数                "orderId":8 //在我们系统中的订单Id            }        }   }   ```    <a name="refund-money"></a>    # 创建退款    - path: `refund/refund-money`    - method: `POST`    - param:        - platForm int `支付平台，1表示微信，2表示支付宝，目前只有微信支付` `必传`        - appId int `各个项目的AppId，做好配置后台之后会同意分配，目前随便写` `必传`        - order_id int `对应的钉在我们项目中的Id` `必传`        - sign string `加密教研字符串`    - response:    ```json    {        "code":0,  //状态码，为0表示退款申请成功        "errmsg":null, //错误原因        "data":{            "refund_id":"50000503652017072001429513373", //在微信等第三方的退款单号            "refund_no":"56bbb455865e4fd398f0ceecf58ecd25" //我们自己的退款单号        }    }    ```    <a name="order-get"></a>    # 获取订单    - path: `order`    - method: `POST`    - param:        - appId int `各个项目的AppId，做好配置后台之后会同意分配，目前随便写` `必传`        - order_id int `对应的钉在我们项目中的Id` `必传`        - sign string `加密教研字符串`    - response:    ```json    	{		"code":0, //错误代码		"errmsg":null, //错误信息		"data":{			"id":30,//订单自增Id			"pay_order_number":"b9422280c58b415cab0571c95c07607d",//订单编号			"app_id":1,//客户端系统Id			"platform":"1",//支付平台，1为微信，2为支付宝			"sdk_type":"JSAPI",//使用的sdk类型			"desc":"test",//订单描述			"total_free":1,//订单金额,单位为分			"tag":"test",//订单标记			"user_id":1,//对应的用户Id			"pay_state":"2",//支付状态，0表示待支付，1表示支付失败，2表示支付成功			"ref_state":"4",//退款状态，0表示未申请，1表示申请失败，2表示申请成功，3表示退款失败，4表示退款成功			"pay_notify_state":"2",//支付回调状态 0表示未回调，1表示回调失败，2表示回调成功			"ref_notify_state":"2",//退款回调状态，0表示未回调，1表示回调失败，2表示回调成功			"transaction_id":"4008662001201707201798718285", //第三方交易号Id			"pay_notify_number":1, //支付回调次数			"ref_notify_number":1, //退款回调次数			"refund_id":"50000503652017072001429513373", //第三方退款单号			"refund_no":"56bbb455865e4fd398f0ceecf58ecd25", //在本系统中的退款单号			"create_time":1500556147, //订单创建时间			"update_time":1500556639  //订单最后修改时间		}	}    ```